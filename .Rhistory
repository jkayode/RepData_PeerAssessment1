source('C:/Users/user/datasciencecoursera/pidconnect.R')
library(RMysQL)
library(RMysQL)
library(DBI)
dbpidcarms <- dbConnect(MySQL(), dbname="nafdac", groups="pidcarmslog", default.file="C:/Users/user/datasciencecoursera/myconfig.cnf")
library(RMySQL)
dbpidcarms <- dbConnect(MySQL(), dbname="nafdac", groups="pidcarmslog", default.file="C:/Users/user/datasciencecoursera/myconfig.cnf")
allTables <- dbListTables(dbpidcarms)
print(allTables)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(head(header))
detail <- dbReadTable(dbpidcarms, "txn_detail")
View(head(detail))
dim(detail)
class(cost_hdf$reg_date)
class(cost_hdf$reg_date_id)
class(cost_hdf$cost_class)
data_df_header <- transform(data_header, cost_class=as.factor(cost_class), reg_date=as.Date(reg_date, "%d/%m/%Y"), inspection=as.numeric(inspection), analysis=as.numeric(analysis), radiation=as.numeric(radiation), VAT=as.numeric(VAT))
library(dplyr)
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 4:7)
cost_hdf <- header_df %>%
select(reg_date, sequencer, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE)) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class)) %>%
distinct(sequencer) %>%
arrange(reg_date, desc(sequencer))
class(cost_hdf$cost_class)
cost_hdf <- header_df %>%
select(reg_date, sequencer, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, %Y))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class)) %>%
distinct(sequencer) %>%
arrange(reg_date, desc(sequencer))
ibrary(dplyr)
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 4:7)
cost_hdf <- header_df %>%
select(reg_date, sequencer, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, %Y))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class)) %>%
distinct(sequencer) %>%
arrange(reg_date, desc(sequencer))
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(charges)
View(cost_hdf)
library(ggplot2)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
print(plot1)
plot1 <- ggplot(data=cost_hdf, aes(Year, Total, color=cost_class)) +
geom_point()
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plot1)
plot1 <- ggplot(data=cost_hdf, aes(Year, Total, color=cost_class)) +
geom_point() +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plot1)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(head(header))
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
cost_hdf <- header_df %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class), division == grepl("drug", division, ignore.case=TRUE)) %>%
distinct(sequencer) %>%
arrange(reg_date, desc(sequencer)) %>%
group_by(Year) %>%
summarise(grandTotal=sum(as.numeric(Total)))
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_line() +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plt1)
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_line() +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plt1)
View(head(cost_hdf))
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(head(cost_hdf))
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 5:8)
cost_hdf <- header_df %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class), grepl("drug", division, ignore.case=TRUE))
View(head(cost_hdf))
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 5:8)
cost_hdf <- header_df %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class), grepl("drug", division, ignore.case=TRUE)) %>%
distinct(sequencer) %>%
arrange(reg_date, desc(sequencer)) %>%
library(dplyr)
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 5:8)
cost_hdf <- header_df %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class), grepl("drug", division, ignore.case=TRUE)) %>%
distinct(sequencer) %>%
arrange(reg_date, desc(sequencer))
View(head(cost_hdf))
library(dplyr)
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 5:8)
cost_hdf <- header_df %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class), grepl("drug", division, ignore.case=TRUE)) %>%
distinct(sequencer) %>%
arrange(reg_date, desc(sequencer)) %>%
group_by(Year, cost_class) %>%
summarise(grandTotal=sum(Total))
View(head(cost_hdf))
View(cost_hdf)
library(dplyr)
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 5:8)
cost_hdf <- header_df %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class), grepl("drug", division, ignore.case=TRUE)) %>%
distinct(sequencer) %>%
group_by(Year, cost_class) %>%
summarise(grandTotal=sum(Total)) %>%
arrange(cost_class)
View(cost_hdf)
View(cost_hdf)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(cost_hdf)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(cost_hdf)
library(dplyr)
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 5:8)
cost_hdf <- header_df %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
filter(Total > 0, !is.na(inspection), !is.na(cost_class), grepl("drug", division, ignore.case=TRUE)) %>%
distinct(sequencer) %>%
group_by(Year, cost_class) %>%
summarise(grandTotal=sum(Total))
View(cost_hdf)
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_line() +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plt1)
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_bar(stat="identity") +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plt1)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_bar(stat="identity") +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plt1)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(cost_hdf)
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_bar(stat="identity") +
labs(title=
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_bar(stat="identity") +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plt1)
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_bar(stat="identity") +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
library(ggplot2)
plt1 <- ggplot(data=cost_hdf, aes(Year, grandTotal, color=cost_class)) +
geom_bar(stat="identity") +
labs(title="Revenue Chart by Year", x="Year", y="Revenue Generated")
print(plt1)
cost_hdf <- header_df %>%
group_by(Year, division, cost_class) %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y"))) %>%
cost_hdf <- header_df %>%
group_by(Year, division, cost_class) %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y")))
library(dplyr)
header_df <- tbl_df(data_df_header)
charges <- select(header_df, 5:8)
cost_hdf <- header_df %>%
group_by(Year, division, cost_class) %>%
select(sequencer, reg_date, division, cost_class, inspection, analysis, radiation, VAT) %>%
mutate(Total = rowSums(charges, na.rm=TRUE), Year=factor(format(reg_date, "%Y")))
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
print(plt1)
View(plt1)
View(cost_hdf)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
print(plt1)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(cost_hdf)
dbDisconnect(dbpidcarms)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
source('C:/Users/user/datasciencecoursera/pidconnect.R')
View(cost_hdf)
source('C:/Users/user/datasciencecoursera/pidconnect.R')
print(plt1)
View(head(header_df))
newDataset2 <- newDataset %>%
mutate(weekday=weekdays(date)) %>%
mutate(weektype=ifelse(weekday %in% c("saturday", "sunday"), "weekend", "weekday"))
print(newDataset2)
source('~/.active-rstudio-document', echo=TRUE)
View(newDataset2)
View(tail(newDataset2))
View(tail(newDataset2, n=2000))
View(tail(newDataset2, n=2000))
rm(newDataset2)
newDataset2 <- newDataset %>%
mutate(day=weekdays(date)) %>%
mutate(type=ifelse(day %in% c("Saturday", "Sunday"), "weekend", "weekday"))
print(newDataset2)
View(tail(newDataset2, n=2000))
library(lattice)
library(lattice)
xyploy(steps ~ interval | type, data=newDataset2)
library(lattice)
xyplot(steps ~ interval | type, data=newDataset2)
library(lattice)
densityplot(steps ~ interval | type, data=newDataset2)
plotData <- newDataset2 %>%
select(steps, intervals, type) %>%
group_by(intervals) %>%
mutate(steps=mean(steps))
par(mfcol=c(2,1))
plot(x=plotData$interval, plotData$steps, type="l", facets=type)
plotData <- newDataset2 %>%
select(steps, interval, type) %>%
group_by(intervals) %>%
mutate(steps=mean(steps))
par(mfcol=c(2,1))
plot(x=plotData$interval, plotData$steps, type="l", facets=type)
plotData <- newDataset2 %>%
select(steps, interval, type) %>%
group_by(interval) %>%
mutate(steps=mean(steps))
par(mfcol=c(2,1))
plot(x=plotData$interval, plotData$steps, type="l", facets=type)
plotData <- newDataset2 %>%
select(steps, interval, type) %>%
group_by(interval) %>%
mutate(steps=mean(steps))
par(mfcol=c(2,1))
plot(x=plotData$interval, plotData$steps, type="l", facets=plotData$type)
library(lattice)
library("lattice")
newDataset2 <- newDataset %>%
mutate(day=weekdays(date)) %>%
mutate(type=ifelse(day %in% c("Saturday", "Sunday"), "weekend", "weekday"))
select(steps, interval, type) %>%
group_by(interval) %>%
mutate(meanSteps=mean(steps))
print(newDataset2)
rm(newDataset2)
rm(plotData)
newDataset2 <- newDataset %>%
mutate(day=weekdays(date)) %>%
mutate(type=ifelse(day %in% c("Saturday", "Sunday"), "weekend", "weekday"))
select(steps, interval, type) %>%
group_by(interval) %>%
mutate(meanSteps=mean(steps))
print(newDataset2)
newDataset2 <- newDataset %>%
mutate(day=weekdays(date)) %>%
mutate(type=ifelse(day %in% c("Saturday", "Sunday"), "weekend", "weekday")) %>%
select(steps, interval, type) %>%
group_by(interval) %>%
mutate(meanSteps=mean(steps))
print(newDataset2)
newDataset2 <- newDataset %>%
mutate(day=weekdays(date)) %>%
mutate(type=ifelse(day %in% c("Saturday", "Sunday"), "weekend", "weekday")) %>%
group_by(interval) %>%
mutate(meanSteps=mean(steps))
print(newDataset2)
View(tail(newDataset2, n=2000))
library("lattice")
plot <- xyplot(interval ~ meanSteps | type, data=newDataset2
type="l")
print(plot)
library("lattice")
plot <- xyplot(interval ~ meanSteps | type, data=newDataset2,
type="l")
print(plot)
library("lattice")
plot <- xyplot(interval ~ meanSteps | type, data=newDataset2,
type="l",
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
library("lattice")
plot <- xyplot(interval ~ meanSteps | type, data=newDataset2,
type="l", layout=c(2,1)
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
library("lattice")
plot <- xyplot(interval ~ meanSteps | type, data=newDataset2,
type="l", layout=c(2,1),
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
library("lattice")
plot <- xyplot(interval ~ meanSteps | type, data=newDataset2,
type="l", layout=c(1,2),
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
library("lattice")
plot <- xyplot(meanSteps ~ interval | type, data=newDataset2,
type="l", layout=c(1,2),
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
newDataset2 <- activityDataset %>%
mutate(day=weekdays(date)) %>%
mutate(type=ifelse(day %in% c("Saturday", "Sunday"), "weekend", "weekday")) %>%
group_by(interval) %>%
mutate(meanSteps=mean(steps))
print(newDataset2)
newDataset2 <- activityDataset %>%
mutate(day=weekdays(date)) %>%
mutate(type=ifelse(day %in% c("Saturday", "Sunday"), "weekend", "weekday")) %>%
group_by(interval) %>%
mutate(meanSteps=mean(steps, na.rm=T))
print(newDataset2)
library("lattice")
plot <- xyplot(meanSteps ~ interval | type, data=newDataset2,
type="l", layout=c(1,2),
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
library("lattice")
plot <- xyplot(meanSteps ~ interval | type, data=newDataset2,
type="l", layout=c(1,2),
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
library("lattice")
plot <- xyplot(meanSteps ~ interval | as.factor(type), data=newDataset2,
type="l", layout=c(1,2),
main="Average Number of Steps Taken \n Across Weekdays and Weekends",
xlab="5-Minute Intervals",
ylab="Mean Steps Taken")
print(plot)
